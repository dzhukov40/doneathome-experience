---
#
# Добавляем пользователя :
#   [ doneathome ]
#
# Устанавливаем :
#   tomcat 8
#   openjdk-8-jre
#
#   mysql
#
#
# пример запуска
# [ ansible-playbook preinstal.yaml --extra-vars "target=192.168.56.11 remote_user=dzhukov" --ask-sudo-pass ]
#
# пример запуска DEBUG
# [ ansible-playbook preinstal.yaml --extra-vars "target=192.168.56.11 remote_user=dzhukov DEBUG=true" --ask-sudo-pass ]
#
#
# (*) зайти как [root] c локального ПК: [ sudo mysql -u root -p ]
# (*) чтобы подключиться к [ mysql ] с другого ПК: [ mysql -h 192.168.56.11 -P 3306 -u <db_user> -p ]
#     - отключаем фаервол [ sudo ufw disable ]
#     - редактируем [ /etc/mysql/mysql.conf.d/mysqld.cnf ]
#       [ bind-address            = 0.0.0.0 ]
#     - проверяем пользователя
#       [ SELECT User, Host, authentication_string FROM user; ]
#
#
#



- hosts: '{{target}}'
  remote_user: '{{remote_user}}'
  sudo: yes

  vars:
    sw_user       : doneathome
    sw_group      : doneathome
    # python -c 'import crypt; print crypt.crypt("doneathome", "$1$SomeSalt$")'
    sw_pass       : $1$SomeSalt$x8ibdyI4rgXWFADZUdFYA0

    db_name       : experiense
    db_user       : doneathome
    # https://www.browserling.com/tools/mysql-password
    # password -> [ doneathome ]
    db_pass       : "*8D1EDF83EE541A203B02D5B107CF50106E65ADB2"
    db_host       : localhost
    db_port       : 3306
    db_root_user  : root
    db_root_pass  :
    db_ALL_REMOVE : false    # удалять ли Mysql


    local_dir            : ./
    remote_dir           : /u01/experience
    local_dist           : "{{local_dir}}/distrib"


    script_name                : doneathome-experience
    scripts_local_dir          : bin
    scripts_distrib            : '../{{scripts_local_dir}}/{{script_name}}'
    scripts_remote_dir         : '{{remote_dir}}/{{scripts_local_dir}}'



    tomcat_distrib_name    : apache-tomcat-8.5.15
    tomcat_local_dir       : tomcat
    tomcat_distrib         : '{{local_dist}}/{{tomcat_local_dir}}/{{tomcat_distrib_name}}.tar.gz'
    tomcat_remote_dir      : '{{remote_dir}}/{{tomcat_local_dir}}'


    DEBUG        : false



  tasks:

    # удалим файлы проекта
    - name: remove all in dir u01/experience
      file:
        state: absent
        path: "{{remote_dir}}/"

    # удалим файл service
    - name: remove service file
      file:
        state: absent
        path: "/etc/init.d/{{script_name}}"

    # удалям процесс порожденный tomcat
    # - name: remove proces
    #   command: "ps -aux | grep {{tomcat_remote_dir}}/bin | awk '{kill -15 $2}'"




    # добавим пользователя и дадим ему [ sudo ]
    - name: create user
      group: name={{sw_group}} state=present
    - user: name={{sw_user}} state=present group={{sw_group}} password={{sw_pass}}
    - lineinfile: dest=/etc/sudoers line="{{sw_user}}       ALL=(ALL)       NOPASSWD:ALL"

    # удалим файлы проекта
    - name: remove all in dir u01/experience
      file:
        state: absent
        path: "{{remote_dir}}/"

    # сделаем директорию для нашего проекта
    - name: create main dir
      file: path={{remote_dir}} state=directory

    # устанавливаем [ openjdk-8-jre ]
    - name: install openjdk-8-jre
      apt:
        name: openjdk-8-jre
        state: latest

    # db_ALL_REMOVE
    # удаляем [ mysql-server ]
    - name: remove mysql-server*
      apt:
        name: mysql-server*
        state: absent
      when: db_ALL_REMOVE == "true"

    - name: remove /var/lib/mysql*
      file:
        state: absent
        path: "{{item.path}}"
      with_items:
        - {path: '/var/lib/mysql'}
        - {path: '/var/lib/mysql-files'}
        - {path: '/var/lib/mysql-keyring'}
        - {path: '/var/lib/mysql-upgrade'}
      when: db_ALL_REMOVE == "true"


    # устанавливаем [ python-mysqldb ]
    # (*) не работало добавление пользователя для БД
    # (*) не работало создание и запуск демона [mysqld]
    - name: install python mysql bindings
      apt:
        name: python-mysqldb
        update_cache: yes
        state: latest

    # устанавливаем [ mysql-server ]
    - name: install mysql-server
      apt:
        name: mysql-server
        state: latest

    # добавляем пользователя
    - mysql_user:
        name: "{{db_user}}"
        password: "{{db_pass}}"
        priv: '*.*:ALL'
        host: '%'
        encrypted: yes
        state: present

    # отправляем два файла и запускаем их, потом удаляем
    # (*) файлы обрабатываются шаблонизатором для вставки значений из окружения
    # (*) заметь на выполнение из [ shell ]
    - name: DB - create database
      template: src=../db/scripts/create_db.sql.j2       dest=/tmp/create_db.sql
    - template: src=../db/scripts/create_tables.sql.j2   dest=/tmp/create_tables.sql
    - shell: "mysql -u {{db_root_user}} --password={{db_root_pass}} < /tmp/create_db.sql"
    - shell: "mysql -u {{db_root_user}} --password={{db_root_pass}} < /tmp/create_tables.sql"
    - command: "rm /tmp/create_db.sql"
    - command: "rm /tmp/create_tables.sql"

    # устанавливаем [ tomcat ] + ( создадим папочку tomcat )
    - name: tomcat install
      copy: src={{tomcat_distrib}} dest=/tmp/tomcat.tgz
    - unarchive: src=/tmp/tomcat.tgz dest={{remote_dir}} copy=no owner={{sw_user}} group={{sw_group}}
    - command: "mv {{remote_dir}}/{{tomcat_distrib_name}} {{remote_dir}}/{{tomcat_local_dir}}"

    # добавляем сервис
    - name: add service
      copy: src={{scripts_distrib}} dest=/etc/init.d/{{script_name}} owner={{sw_user}} group={{sw_group}} mode="0755"
    - command: "update-rc.d {{script_name}} defaults"

    # DEBUG
    # Добавляем пользователя для работы плагина [ tomcat7-maven-plugin = 2.2 ]
    # (*) заметь параметр [ insertbefore='</tomcat-users>' ] производить вставку перед этой строчкой
    - name: adds string to [ ../tomcat/conf/tomcat-users.xml ]
      lineinfile: dest=/u01/experience/tomcat/conf/tomcat-users.xml line="{{item.line}}" insertbefore='</tomcat-users>'
      with_items:
        - {line: '<role rolename="manager-gui"/>'}
        - {line: '<role rolename="manager-script"/>'}
        - {line: '<user username="{{sw_user}}" password="{{sw_user}}" roles="manager-qui, manager-script"/>'}
      when: DEBUG == "true"

    # DEBUG
    # Создадим дерикторию
    - name: create catalina dir
      file: path=/u01/experience/tomcat/conf/Catalina/localhost/ state=directory owner={{sw_user}} group={{sw_group}} mode="0755" recurse=yes
      when: DEBUG == "true"

    # DEBUG
    # Создадим файл
    - name: create file
      file: path=/u01/experience/tomcat/conf/Catalina/localhost/manager.xml state=touch owner={{sw_user}} group={{sw_group}} mode="0755"
      when: DEBUG == "true"

    # DEBUG
    # Добавляем пользователя для работы плагина [ tomcat7-maven-plugin = 2.2 ]
    - name: add lines to [ ../conf/Catalina/localhost/manager.xml ]
      lineinfile: dest=/u01/experience/tomcat/conf/Catalina/localhost/manager.xml line="{{item.line}}"
      with_items:
        - {line: '<Context privileged="true" antiResourceLocking="false" docBase="${catalina.home}/webapps/manager">'}
        - {line: '<Valve className="org.apache.catalina.valves.RemoteAddrValve" allow="^.*$" />'}
        - {line: '</Context>'}
      when: DEBUG == "true"

    # DEBUG
    # Поменяем строчку в файле [ /u01/experience/tomcat/bin/catalina.sh ]
    # TODO: убрать IP захардкоженый
    - name: chenge line in catalina.sh
      lineinfile: dest=/u01/experience/tomcat/bin/catalina.sh regexp='JPDA_ADDRESS=' line='    JPDA_ADDRESS="192.168.56.11:8000"' state=present
      when: DEBUG == "true"

    # DEBUG
    # Поменяем строчку в файле [ /etc/init.d/doneathome-experience ]
    # Два раза, так-как меняется только последняя строчка
    - name: chenge line in doneathome-experience
      lineinfile: dest=/etc/init.d/doneathome-experience regexp='{{item.line}}' line='    sudo -u $RUNAS sh -c "$CATALINA_HOME/bin/catalina.sh jpda start"' state=present
      with_items:
        - {line: 'catalina.sh start"'}
        - {line: 'catalina.sh start"'}
      when: DEBUG == "true"

    - name: Start service
      command: "/etc/init.d/{{script_name}} start"

    - pause: seconds=1











